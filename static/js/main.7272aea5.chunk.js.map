{"version":3,"sources":["utils/localstoragefunction.ts","constants/color/color.constant.ts","constants/routes-front/routes-front.constant.ts","constants/routes-back/routes-back.constant.ts","constants/local-storage/local-sotrage.constant.ts","constants/default/single-anime/single-anime.constant.tsx","app/hooks.ts","reducer/token/axios/axios.api.ts","reducer/token/axios/ani.api.ts","reducer/token/function/set-token-async.function.ts","reducer/token/thunk/search/search.thunk.ts","reducer/token/thunk/anime/anime.thunk.ts","reducer/token/thunk/episode/episode.thunk.ts","reducer/token/token.slicer.ts","reducer/token/function/set-token.function.ts","reducer/token/function/hide.function.ts","reducer/token/function/show.function.ts","ui/components/input/input.component.tsx","ui/components/pop-up/base/pop-up.component.tsx","ui/components/pop-up/connect/pop-up.connect.component.tsx","ui/components/loading/base/loading.style.tsx","ui/components/loading/base/loading.component.tsx","ui/components/loading/connect/loading.connect.component.tsx","assets/img/next/next.icon.tsx","assets/img/prev/prev.icon.tsx","ui/components/paginator/paginator.styled.tsx","ui/components/paginator/paginator.component.tsx","ui/screen/login/login.style.tsx","constants/fonts/font.constant.ts","ui/screen/login/login.screen.tsx","hooks/query/base/query.base.hook.tsx","hooks/query/search/query.search.hook.tsx","constants/pagiantor/inithialpage.constant.ts","hooks/query/episode/query.episode.hook.tsx","ui/screen/search/section/search-header/serach-header.style.tsx","ui/screen/search/section/search-header/search-header.section.tsx","assets/img/search/search.ico.tsx","assets/img/home/home.icon.tsx","assets/img/download/download.icon.tsx","ui/screen/search/section/search-input/serach-input.style.tsx","ui/screen/search/section/search-input/search-input.section.tsx","ui/screen/search/section/search-paginator/search-paginator.section.tsx","ui/screen/search/section/search-display/search-display.style.tsx","ui/screen/search/section/search-display/section/card/search-display-card.style.tsx","ui/screen/search/section/search-display/section/card/search-display-card.section.tsx","ui/screen/search/section/search-display/search-display.section.tsx","ui/screen/search/search.screen.tsx","ui/screen/anime/anime.style.tsx","ui/screen/anime/section/title/anime-title.style.tsx","ui/screen/anime/section/title/anime-title.section.tsx","ui/screen/anime/section/description/description.style.tsx","ui/screen/anime/section/description/description.section.tsx","ui/screen/anime/section/epsisodes/episode.style.tsx","ui/screen/anime/section/epsisodes/section/loading/loading-ep.section.tsx","ui/screen/anime/section/epsisodes/section/paginator/episode-paginator.tsx","ui/screen/anime/section/epsisodes/episodes.section.tsx","ui/screen/anime/anime.screen.tsx","hooks/query/id/query.id.hook.tsx","routers/custom/no-token.route.tsx","routers/custom/public.route.tsx","routers/custom/token.route.tsx","routers/build/routes.builder.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["key","COLOR","ROUTE_FRONT","name","page","id","index","BASE_URL","ROUTES_BACK","LOCAL_STORAGE","SINGLE_ANIME","Date","cover_color","useAppDispatch","useDispatch","useAppSelector","useSelector","myAxios","baseUrl","headers","axios","create","baseURL","myAniApi","Authorization","ME","ANIME","EPISODE","ANIME_PARAM","instance","me","a","get","response","data","anime","query","title","params","animeId","episode","setTokenAsync","token","resposne","pop_up","message","show","success","searchAsyncAction","createAsyncThunk","thunkAPI","getState","api","animeAsyncAction","status_code","episodeAsyncAction","initialState","JSON","parse","localStorage","getItem","setTokenAsyncAction","setTokenA","tokenSlicer","createSlice","reducers","setToken","state","action","payload","hide","extraReducers","builder","addCase","pending","loading","fulfilled","single_anime","undefined","loadingEp","actions","popUp","loadingEpSelect","meSelect","animeSelect","singleAnimeSelect","tokenReducer","reducer","episodeSelect","Input","props","Style","onChange","event","target","value","PopUpComponent","Red","Green","Current_Line","Fade","keyframes","PopUpDiv","styled","div","PopUPComponentConnect","info","dispath","setTimeout","Cyan","Background","LoadingDiv","spin","LoadingLoader","LoadinComponent","LoadingConnectComponent","load","NextIcon","Comment","color","xmlns","height","viewBox","width","fill","d","points","PrevIcon","opacity","PaginatorDiv","PaginatorButton","button","PaginatorSpan","span","PaginatorComponent","handlePrev","handleNext","onClick","Orange","Purple","Pink","Foreground","LoginDiv","LoginForm","form","LoginSpan","LoginLabel","label","LoginInput","input","LoginButton","LoginLink","LoginScreen","useState","dispatch","onSubmit","preventDefault","href","useQuery","URLSearchParams","useLocation","search","QUERY_SEARCH","useQuerySearch","NAME","PAGE","toString","ID","INDEX","useQueryEpisode","parseInt","Yellow","SearchHeaderDiv","SearchHeaderSubDiv","SearchHeaderBaseSpan","SearchHeaderEmailSpan","SearchHeaderUserSpan","SearchHeaderLocationSpan","SearchHeader","email","username","localization","SearchIcon","HomeIcon","DownloadIcon","SearchInputForm","SearchInputInput","SearchIputButton","SearchInputSection","setValue","SEARCH_QUERY","history","useHistory","push","SearchPaginatorSection","lastPage","last_page","pageNum","next","prev","SearchDisplayDiv","SearchDisplayCardDiv","SearchDisplayCardSection","ANIME_QUERY","titles","jp","en","SearchDisplayCardButton","cover_image","titleToLong","substr","length","SearchDisplaySection","documents","map","anim","SearchScreen","useEffect","AnimeDiv","AnimeBanner","img","AnimeTitle","AnimeTitleDiv","AnimeTitleBaseSpan","AnimeTitleEnSpan","AnimeTitleJpSpan","AnimeHomeButton","AnimeTitleSection","DescriptionDiv","DescriptionScore","DescriptionSpan","DescriptionSection","score","descriptions","DescriptionImg","EpisodeDiv","EpisodeInerButton","first","EpisodeSpan","EpisodeA","LoadingEp","EpisodePaginator","EpisodesSection","ep","number","video","AnimeScreen","src","banner_image","alt","SEARCH","NoTokenRoute","to","PublicRoute","LOGIN","TokenRoute","RouteRedirect","RouterBuilder","path","exact","component","CustomRoute","DivApp","Container","App","fetchCount","amount","Promise","resolve","incrementAsync","counterSlice","status","increment","decrement","incrementByAmount","store","configureStore","counter","counterReducer","subscribe","val","setItem","stringify","setLocalStorage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7272aea5.chunk.js","sourcesContent":["const getLocalStorage = <T>(key: string): T => {\n    return JSON.parse(\n        localStorage.getItem(key) as string\n    ) as T\n}\nconst setLocalStorage = <T>(val: T, key: string) => {\n    localStorage.setItem(\n        key,\n        JSON.stringify(val),\n    )\n}\n\nexport { getLocalStorage, setLocalStorage }","const COLOR = {\n    Background: \"#282a36\",\n    Current_Line: \"#44475a\",\n    Foreground: \"#f8f8f2\",\n    Comment: \"#6272a4\",\n    Cyan: \"#8be9fd\",\n    Green: \"#50fa7b\",\n    Orange: \"#ffb86c\",\n    Pink: \"#ff79c6\",\n    Purple: \"#bd93f9\",\n    Red: \"#ff5555\",\n    Yellow: \"\t#f1fa8c\",\n}\n\nexport { COLOR }","const ROUTE_FRONT = {\n    LOGIN: \"/login\",\n    SEARCH: \"/search\",\n    ANIME: \"/anime\",\n    SEARCH_QUERY: (name?: string, page?: number) => `/search?name=${name || \"\"}&page=${page || \"0\"}`,\n    ANIME_QUERY: (id?: number, page: number = 1, index: number = 0) => `/anime?id=${id}&page=${page}&index=${index}`,\n}\n\nexport { ROUTE_FRONT }","const GENERATE_TOKEN = \"https://aniapi.com/login/\";\nconst BASE_URL = \"https://api.aniapi.com\";\nconst ROUTES_BACK = {\n    ME: \"/v1/auth/me\",\n    ANIME: \"/v1/anime\",\n    EPISODE: \"/v1/episode\",\n    ANIME_PARAM: (id: number) => `/v1/anime/${id}`\n}\n\nexport { GENERATE_TOKEN, BASE_URL, ROUTES_BACK }","const LOCAL_STORAGE = {\n    TOKEN: \"token\"\n}\n\nexport { LOCAL_STORAGE }","import { SingleAnime } from \"../../../dto\";\n\nconst SINGLE_ANIME: SingleAnime = {\n    \"status_code\": 200,\n    \"message\": \"Anime found\",\n    \"data\": {\n        \"anilist_id\": 205,\n        \"mal_id\": 205,\n        \"format\": 0,\n        \"status\": 0,\n        \"titles\": {\n            \"en\": \"Samurai Champloo\",\n            \"jp\": \"サムライチャンプルー\",\n            \"it\": \"Samurai Champloo\"\n        },\n        \"descriptions\": {\n            \"en\": \"\",\n            \"it\": \"Dal primo episodio poco si evince su dove voglia andare a parare l’autore. Un maestro di spada e un samurai vagabondo finiscono nella stessa città e nell'aiutare, in modo interessato, alcune persone che stavano subendo dei soprusi, finiscono nei guai. Inoltre si incontrano e, lasciando perdere i relativi problemi, iniziano a lottare tra di loro e finiscono entrambi catturati e condannati a morte…\"\n        },\n        \"start_date\": new Date(\"2004-05-20T00:00:00Z\"),\n        \"end_date\": new Date(\"2005-03-19T00:00:00Z\"),\n        \"season_period\": 1,\n        cover_color: \"red\",\n        \"season_year\": 2004,\n        \"episodes_count\": 26,\n        \"episode_duration\": 24,\n        \"cover_image\": \"https://s4.anilist.co/file/anilistcdn/media/anime/cover/medium/bx205-xxonQKyJtVcw.png\",\n        \"banner_image\": \"https://s4.anilist.co/file/anilistcdn/media/anime/banner/205-L7WpOOWUmVjh.jpg\",\n        \"genres\": [\n            \"Action\",\n            \"Adventure\",\n            \"Comedy\",\n            \"Swordplay\",\n            \"Samurai\",\n            \"Rural\",\n            \"Historical\",\n            \"Anachronism\",\n            \"Primarily Adult Cast\",\n            \"Martial Arts\",\n            \"Episodic\",\n            \"Male Protagonist\",\n            \"Female Protagonist\",\n            \"Tanned Skin\",\n            \"Nudity\",\n            \"Yakuza\",\n            \"Kuudere\",\n            \"Language Barrier\",\n            \"Baseball\",\n            \"Politics\",\n            \"Zombie\",\n            \"Ninja\"\n        ],\n        \"score\": 84,\n        \"id\": 141\n    },\n    \"version\": \"1\"\n}\n\nexport { SINGLE_ANIME }","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios from \"axios\"\n\nconst myAxios = (baseUrl: string, headers: any) => {\n    return axios.create({\n        baseURL: baseUrl,\n        headers: headers\n    })\n}\n\nexport { myAxios }","import { AxiosResponse } from \"axios\";\nimport { BASE_URL, ROUTES_BACK } from \"../../../constants\"\nimport { Anime, Episode, Me, SingleAnime } from \"../../../dto\";\nimport { QueryEpisode, QuerySearch } from \"../../../hooks\";\nimport { myAxios } from \"./axios.api\"\n\nconst myAniApi = (Authorization: String = \"\") => {\n\n    const { ME, ANIME, EPISODE, ANIME_PARAM } = ROUTES_BACK;\n\n    const instance = myAxios(BASE_URL, {\n        Authorization: `Bearer ${Authorization}`\n    })\n\n    const me = async () => {\n        const response: AxiosResponse<Me> = await instance.get(ME);\n\n        return response.data;\n    }\n\n    const anime = async (query: QuerySearch) => {\n\n        const title = query.name;\n\n        const response: AxiosResponse<Anime> = await instance.get(ANIME, {\n            params: {\n                title,\n                page: query.page\n            }\n        })\n\n        return response.data;\n    }\n\n    const animeId = async (id: number) => {\n        const response: AxiosResponse<SingleAnime> = await instance.get(ANIME_PARAM(id));\n\n        return response.data;\n    }\n\n    const episode = async (query: QueryEpisode) => {\n        const response: AxiosResponse<Episode> = await instance.get(EPISODE, {\n            params: {\n                ...query\n            }\n        })\n\n        return response.data;\n    }\n\n    return {\n        me,\n        anime,\n        animeId,\n        episode\n    }\n\n}\n\n\n\nexport {\n    myAniApi,\n}\n","import { Me } from \"../../../dto\";\nimport { myAniApi } from \"../axios\"\nimport { PopUpState } from \"../token.slicer\";\n\nexport type MeTokenDto = {\n    token: string,\n    me?: Me,\n    pop_up: PopUpState\n};\n\nconst setTokenAsync = async (token: string): Promise<MeTokenDto> => {\n    const { me } = myAniApi(token);\n\n    try {\n        const resposne = await me();\n        return {\n            token,\n            me: resposne,\n            pop_up: {\n                message: \"Ok !!!\",\n                show: true,\n                success: true\n            }\n        }\n    } catch (error) {\n        return {\n            token,\n            pop_up: {\n                message: \"Fail ;(\",\n                show: true,\n                success: false\n            }\n        }\n    }\n\n\n}\n\nexport { setTokenAsync }","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../../app/store\";\nimport { Anime } from \"../../../../dto\";\nimport { QuerySearch } from \"../../../../hooks\";\nimport { myAniApi } from \"../../axios\";\n\nexport const searchAsyncAction = createAsyncThunk<Anime | undefined, QuerySearch, { state: RootState, extra: null }>(\n    \"info/search\",\n    async (query, thunkAPI) => {\n\n        const token = thunkAPI.getState().token.token as string;\n\n        const api = myAniApi(token);\n\n        return await api.anime(query);\n\n    }\n);\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../../app/store\";\nimport { SINGLE_ANIME } from \"../../../../constants\";\nimport { SingleAnime } from \"../../../../dto\";\nimport { myAniApi } from \"../../axios\";\n\nexport const animeAsyncAction = createAsyncThunk<SingleAnime | undefined, number, { state: RootState, extra: null }>(\n    \"info/anime\",\n    async (id, thunkAPI) => {\n\n        const token = thunkAPI.getState().token.token as string;\n\n        const api = myAniApi(token);\n\n        const response = await api.animeId(id);\n\n        if (response.status_code === 404) {\n            return SINGLE_ANIME;\n        }\n\n        return response;\n    }\n);","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../../../app/store\";\nimport { Episode } from \"../../../../dto\";\nimport { QueryEpisode } from \"../../../../hooks\";\nimport { myAniApi } from \"../../axios\";\n\nexport const episodeAsyncAction = createAsyncThunk<Episode | undefined, QueryEpisode, { state: RootState, extra: null }>(\n    \"info/episode\",\n    async (query, thunkAPI) => {\n\n        const token = thunkAPI.getState().token.token as string;\n\n        const api = myAniApi(token);\n\n        return await api.episode(query);\n\n    }\n);","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { LOCAL_STORAGE, SINGLE_ANIME } from \"../../constants\";\nimport { Anime, Episode, Me, SingleAnime } from \"../../dto\";\nimport { getLocalStorage } from \"../../utils\";\nimport { hideFunction, setToken, setTokenAsync as setTokenA, showFunction } from \"./function\";\nimport { searchAsyncAction, animeAsyncAction, episodeAsyncAction } from \"./thunk\";\nexport * from \"./thunk\";\n\nexport interface PopUpState {\n    message?: string;\n    show: boolean;\n    success?: boolean\n}\n\nexport interface TokenState {\n    token?: string;\n    me?: Me;\n    loading: boolean;\n    pop_up: PopUpState;\n    anime?: Anime,\n    single_anime?: SingleAnime;\n    episode?: Episode;\n    loadingEp: boolean;\n}\n\nconst initialState: TokenState = getLocalStorage(LOCAL_STORAGE.TOKEN) || {\n    pop_up: {\n        show: false\n    }\n}\n\n\n\nexport const setTokenAsyncAction = createAsyncThunk(\n    \"token/set-async\",\n    setTokenA\n)\n\nexport const tokenSlicer = createSlice({\n    name: \"token\",\n    initialState,\n    reducers: {\n        setToken: setToken,\n        hide: hideFunction,\n        show: showFunction\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(setTokenAsyncAction.pending, (state) => {\n                return {\n                    ...state,\n                    loading: true\n                }\n            })\n            .addCase(setTokenAsyncAction.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    ...action.payload,\n                    loading: false\n                }\n            })\n            .addCase(searchAsyncAction.pending, (state) => {\n                return {\n                    ...state,\n                    loading: true\n                }\n            })\n            .addCase(searchAsyncAction.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    anime: action.payload,\n                    loading: false\n                }\n            })\n            .addCase(animeAsyncAction.pending, (state) => {\n                return {\n                    ...state,\n                    loading: true,\n                }\n            })\n            .addCase(animeAsyncAction.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    loading: false,\n                    single_anime: action.payload\n                }\n            })\n            .addCase(episodeAsyncAction.pending, (state) => {\n                return {\n                    ...state,\n                    episode: undefined,\n                    loadingEp: true\n                }\n            })\n            .addCase(episodeAsyncAction.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    episode: action.payload as Episode,\n                    loadingEp: false\n                }\n            })\n    }\n})\n\nexport const { setToken: setTokenAction, hide, show } = tokenSlicer.actions;\n\nexport const token = (state: RootState) => state.token.token as String;\n\nexport const popUp = (state: RootState) => state.token.pop_up;\n\nexport const loading = (state: RootState) => state.token.loading;\n\nexport const loadingEpSelect = (state: RootState) => state.token.loadingEp;\n\nexport const meSelect = (state: RootState) => state.token.me as Me;\n\nexport const animeSelect = (state: RootState) => state.token.anime as Anime;\n\nexport const singleAnimeSelect = (state: RootState) => state.token.single_anime as SingleAnime || SINGLE_ANIME;\n\nexport const tokenReducer = tokenSlicer.reducer;\n\nexport const episodeSelect = (state: RootState) => state.token.episode as Episode;","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { TokenState } from \"../token.slicer\";\n\nconst setToken = (state: TokenState, action: PayloadAction<string>): TokenState => (\n    {\n        ...state,\n        token: action.payload\n    }\n)\n\nexport { setToken }","import { TokenState } from \"../token.slicer\";\n\nconst hideFunction = (state: TokenState): TokenState => {\n    return {\n        ...state,\n        pop_up: {\n            ...state.pop_up,\n            show: false\n        }\n    }\n}\n\nexport { hideFunction }","import { TokenState } from \"../token.slicer\";\n\nconst showFunction = (state: TokenState): TokenState => {\n    return {\n        ...state,\n        pop_up: {\n            ...state.pop_up,\n            show: true\n        }\n    }\n}\n\nexport { showFunction }","import { InputHTMLAttributes } from \"react\";\nimport { StyledComponent } from \"styled-components\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    onChange: (val: any) => void,\n    Style: StyledComponent<\"input\", any, {}, never>\n};\n\n\nconst Input = (props: InputProps) => {\n\n    const { Style } = props;\n\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        props.onChange(event.target.value);\n    }\n\n    return (\n        <Style {...props} onChange={onChange} />\n    );\n}\n\nexport type { InputProps }\n\nexport { Input }","import styled, { keyframes } from \"styled-components\"\nimport { COLOR } from \"../../../../constants\";\nimport { PopUpState } from \"../../../../reducer\";\n\n\nconst PopUpComponent = (props: PopUpState) => {\n\n    const { success, show, message } = props;\n\n    const { Red, Green, Current_Line } = COLOR;\n\n    const Fade = keyframes`\n        0% {\n            opacity: 0;\n        }\n        30% {\n            opacity: 1\n        }\n        70%{\n            opacity: 1\n        }\n        100% {\n            opacity: 0;\n        }\n    `;\n\n\n    const PopUpDiv = styled.div`\n        position: fixed;\n        top: 30px;\n        left: 30px;\n        border: 1px solid ${Current_Line};\n        max-width: 300px;\n        border-radius: 2px;\n        padding: 20px 50px;\n        color: ${success ? Green : Red};\n        animation: ${Fade} 2s forwards;\n    `;\n    if (show)\n        return (\n            <PopUpDiv>\n                {message}\n            </PopUpDiv>\n        )\n    return (\n        <></>\n    )\n}\n\nexport { PopUpComponent }","import { PopUpComponent } from \"../..\"\nimport { useAppDispatch, useAppSelector } from \"../../../../app/hooks\"\nimport { hide, popUp } from \"../../../../reducer\"\n\nconst PopUPComponentConnect = () => {\n\n    const info = useAppSelector(popUp);\n\n    const dispath = useAppDispatch();\n\n    if (info.show) {\n        setTimeout(() => {\n            dispath(hide())\n        }, 2000)\n    }\n\n    return (\n        <PopUpComponent {...info} />\n    )\n}\n\nexport { PopUPComponentConnect };","import styled, { keyframes } from \"styled-components\";\nimport { COLOR } from \"../../../../constants\";\n\nconst { Cyan, Background } = COLOR;\n\nconst LoadingDiv = styled.div`\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst spin = keyframes`\n    0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst LoadingLoader = styled.div`\n    border: 10px solid ${Cyan}; /* Light grey */\n    border-top: 10px solid ${Background}; /* Blue */\n    border-radius: 50%;\n    width: 1px;\n    height: 1px;\n    animation: ${spin} 2s linear infinite;\n`;\n\nexport { LoadingDiv, LoadingLoader }","import { LoadingDiv, LoadingLoader } from \"./loading.style\";\n\ntype LoadingProps = {\n    loading: boolean;\n}\n\nconst LoadinComponent = (props: LoadingProps) => {\n\n    const { loading } = props;\n\n    return (\n        <LoadingDiv>\n            {loading && <LoadingLoader />}\n        </LoadingDiv>\n    )\n}\n\nexport { LoadinComponent }","import { useAppSelector } from \"../../../../app/hooks\";\nimport { loading } from \"../../../../reducer\";\nimport { LoadinComponent } from \"../base/loading.component\";\n\nconst LoadingConnectComponent = () => {\n\n    const load = useAppSelector(loading)\n\n    return (\n        <LoadinComponent loading={load} />\n    );\n}\n\nexport { LoadingConnectComponent }","import { COLOR } from \"../../../constants\";\nimport { IconProps } from \"../props/props.icon\";\n\nconst NextIcon = (props: IconProps) => {\n\n    const { Comment } = COLOR;\n\n    const color = props.color as string || Comment;\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill={color}><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\" /></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\" /></g></svg>\n    )\n}\n\nexport { NextIcon }","import { COLOR } from \"../../../constants\"\nimport { IconProps } from \"../props/props.icon\"\n\n\nconst PrevIcon = (props: IconProps) => {\n\n    const { Comment } = COLOR;\n\n    const color = props.color as string || Comment;\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill={color}><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\" /><path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\" /></svg>\n    )\n}\n\nexport { PrevIcon }","import styled from \"styled-components\";\nimport { COLOR } from \"../../../constants\";\n\nconst { Background, Comment } = COLOR;\n\nconst PaginatorDiv = styled.div`\n    padding-top: 5px;\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst PaginatorButton = styled.button`\n    background-color: ${Background};\n    border: none;\n    cursor: pointer;\n`;\n\nconst PaginatorSpan = styled.span`\n    color: ${Comment};\n`;\n\n\nexport { PaginatorDiv, PaginatorButton, PaginatorSpan }","import { FC } from \"react\"\nimport { NextIcon } from \"../../../assets/img/next/next.icon\";\nimport { PrevIcon } from \"../../../assets/img/prev/prev.icon\";\nimport { PaginatorButton, PaginatorDiv, PaginatorSpan } from \"./paginator.styled\";\n\ntype PaginatorComponentProps = {\n    page: number,\n    handlePrev: () => void,\n    handleNext: () => void\n}\n\nconst PaginatorComponent: FC<PaginatorComponentProps> = (props) => {\n\n    const { page, handlePrev, handleNext } = props;\n\n    return (\n        <PaginatorDiv>\n            <PaginatorButton onClick={handlePrev}>\n                <PrevIcon />\n            </PaginatorButton>\n            <PaginatorSpan>\n                {page}\n            </PaginatorSpan>\n            <PaginatorButton onClick={handleNext}>\n                <NextIcon />\n            </PaginatorButton>\n        </PaginatorDiv>\n\n    )\n}\n\nexport { PaginatorComponent }","import styled from \"styled-components\";\nimport { COLOR, LABEL_FONT_SIZE } from \"../../../constants\";\n\n\nconst { Comment, Orange, Current_Line, Purple, Pink, Foreground, Cyan } = COLOR;\n\nconst LoginDiv = styled.div`\n        color: ${Comment};\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n        align-items: center;\n`;\n\nconst LoginForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n`;\n\nconst LoginSpan = styled.span`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n`;\n\nconst LoginLabel = styled.label`\n    color: ${Orange};\n    font-size: ${LABEL_FONT_SIZE};\n`;\n\nconst LoginInput = styled.input`\n    background-color: ${Current_Line};\n    color: ${Purple};\n    font-size: 25px;\n    border: 0;\n    height: 50px;\n`;\n\n\n\nconst LoginButton = styled.button`\n    cursor: pointer;\n    height: 50px;\n    background-color: ${Pink};\n    color: ${Foreground};\n    border: none;\n    font-weight: bold;\n    font-size: 15px;\n    border-radius: 2px;\n`;\n\nconst LoginLink = styled.a`\n    cursor: pointer;\n    color: ${Cyan};\n    text-align: center;\n`;\n\nexport { LoginDiv, LoginInput, LoginForm, LoginLabel, LoginButton, LoginSpan, LoginLink }","const LABEL_FONT_SIZE = \"30px\";\n\nexport { LABEL_FONT_SIZE }","import { useState } from \"react\";\nimport { useAppDispatch } from \"../../../app/hooks\";\nimport { GENERATE_TOKEN } from \"../../../constants\";\nimport { setTokenAsyncAction } from \"../../../reducer/token/token.slicer\";\nimport { Input, LoadingConnectComponent, PopUPComponentConnect } from \"../../components\";\nimport { LoginButton, LoginDiv, LoginForm, LoginInput, LoginLabel, LoginLink, LoginSpan } from \"./login.style\";\n\n\nconst LoginScreen = () => {\n\n    const [token, setToken] = useState(\"\");\n\n    const dispatch = useAppDispatch();\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        dispatch(setTokenAsyncAction(token));\n    }\n\n    return (\n        <LoginDiv>\n            <LoginForm onSubmit={handleSubmit}>\n\n                <LoginSpan>\n                    <LoginLabel>\n                        Token\n                    </LoginLabel>\n                    <Input Style={LoginInput} value={token} onChange={setToken} />\n                </LoginSpan>\n                <LoginButton>\n                    send\n                </LoginButton>\n                <LoginLink target=\"_blank\" href={GENERATE_TOKEN}>\n                    generate token\n                </LoginLink>\n                <LoadingConnectComponent />\n            </LoginForm>\n            <PopUPComponentConnect />\n        </LoginDiv>\n    )\n}\n\nexport { LoginScreen }","import { useLocation } from \"react-router\"\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport { useQuery }","\nimport { INITHIAL_PAGE } from \"../../../constants\";\nimport { useQuery } from \"../base/query.base.hook\"\n\nconst QUERY_SEARCH = {\n    NAME: \"name\",\n    PAGE: \"page\"\n}\n\ntype QuerySearch = {\n    name: string,\n    page: string\n}\n\nconst useQuerySearch = (): QuerySearch => {\n\n    const { NAME, PAGE } = QUERY_SEARCH;\n\n    const query = useQuery();\n\n    const name = query.get(NAME) || \"\";\n    const page = query.get(PAGE) || INITHIAL_PAGE.toString();\n    return {\n        name,\n        page\n    }\n\n}\n\nexport type { QuerySearch }\n\nexport { useQuerySearch }","const INITHIAL_PAGE = 1;\n\nexport { INITHIAL_PAGE }","import { useQuery } from \"../base/query.base.hook\";\n\nconst QUERY_EPISODE = {\n    ID: \"id\",\n    PAGE: \"page\",\n    INDEX: \"index\"\n}\n\ntype QueryEpisode = {\n    id: number,\n    page: number,\n    index?: number\n}\n\nconst { ID, PAGE, INDEX } = QUERY_EPISODE;\n\nconst useQueryEpisode = (): QueryEpisode => {\n    const query = useQuery();\n\n    const id = parseInt(query.get(ID) as string) || 1;\n\n    const page = parseInt(query.get(PAGE) as string) || 1;\n\n    const index = parseInt(query.get(INDEX) as string) || 1;\n\n    return {\n        id,\n        page,\n        index\n    }\n}\n\nexport {\n    useQueryEpisode\n}\n\nexport type {\n    QueryEpisode\n}","import styled from \"styled-components\";\nimport { COLOR } from \"../../../../../constants\";\n\nconst { Current_Line, Purple, Pink, Yellow } = COLOR;\n\nconst SearchHeaderDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-top: 50px;\n    padding-bottom: 30px;\n    border-bottom: solid 1px ${Current_Line};\n`;\n\nconst SearchHeaderSubDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`;\n\nconst SearchHeaderBaseSpan = styled.span`\n    font-size: 15px;\n`;\n\nconst SearchHeaderEmailSpan = styled(SearchHeaderBaseSpan)`\n    color: ${Purple}\n`;\nconst SearchHeaderUserSpan = styled(SearchHeaderBaseSpan)`\n    color: ${Pink}\n`;\n\nconst SearchHeaderLocationSpan = styled(SearchHeaderBaseSpan)`\n    color: ${Yellow}\n`;\n\n\nexport { SearchHeaderDiv, SearchHeaderSubDiv, SearchHeaderEmailSpan, SearchHeaderUserSpan, SearchHeaderLocationSpan }","import { useAppSelector } from \"../../../../../app/hooks\"\nimport { meSelect } from \"../../../../../reducer\"\nimport { SearchHeaderDiv, SearchHeaderEmailSpan, SearchHeaderLocationSpan, SearchHeaderSubDiv, SearchHeaderUserSpan } from \"./serach-header.style\"\n\nconst SearchHeader = () => {\n\n    const me = useAppSelector(meSelect)\n\n    const { email, username, localization } = me.data;\n\n    return (\n        <SearchHeaderDiv>\n            <SearchHeaderSubDiv>\n                <SearchHeaderEmailSpan>\n                    {email}\n                </SearchHeaderEmailSpan>\n                <SearchHeaderUserSpan>\n                    {username}\n                </SearchHeaderUserSpan>\n            </SearchHeaderSubDiv>\n            <SearchHeaderLocationSpan>\n                {localization}\n            </SearchHeaderLocationSpan>\n        </SearchHeaderDiv>\n    )\n}\n\nexport { SearchHeader }","import { COLOR } from \"../../../constants\"\nimport { IconProps } from \"../props/props.icon\"\n\nconst { Comment } = COLOR;\n\nconst SearchIcon = (props: IconProps) => {\n\n    const color = props.color as string || Comment;\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill={color}><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" /></svg>\n    )\n}\n\nexport { SearchIcon }","import { COLOR } from \"../../../constants\";\nimport { IconProps } from \"../props/props.icon\"\n\nconst HomeIcon = (props: IconProps) => {\n\n    const { Cyan } = COLOR;\n\n    const color = props.color as string || Cyan;\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill={color}><rect fill=\"none\" height=\"24\" width=\"24\" /><path d=\"M12,3L6,7.58V6H4v3.11L1,11.4l1.21,1.59L4,11.62V21h16v-9.38l1.79,1.36L23,11.4L12,3z M18,19h-5v-4h-2v4H6v-8.9l6-4.58 l6,4.58V19z M10,1c0,1.66-1.34,3-3,3C6.45,4,6,4.45,6,5H4c0-1.66,1.34-3,3-3c0.55,0,1-0.45,1-1H10z\" /></svg>\n    )\n}\n\nexport { HomeIcon }","import { COLOR } from \"../../../constants\";\n\nconst { Pink } = COLOR;\n\nconst DownloadIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill={Pink}><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><path d=\"M18,15v3H6v-3H4v3c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2v-3H18z M17,11l-1.41-1.41L13,12.17V4h-2v8.17L8.41,9.59L7,11l5,5 L17,11z\" /></g></svg>\n    );\n}\n\nexport {\n    DownloadIcon\n}","import styled from \"styled-components\";\nimport { COLOR } from \"../../../../../constants\";\n\nconst { Current_Line, Comment, Orange } = COLOR;\n\nconst SearchInputForm = styled.form`\n    padding-top: 10px;\n    display: flex;\n    width: 100%;\n`;\n\nconst SearchInputInput = styled.input`\n    width: 100%;\n    background-color: ${Current_Line};\n    color: ${Orange};\n    border: none;\n    padding: 2px;\n`;\n\nconst SearchIputButton = styled.button`\n    padding: 2px;\n    border: none;\n    border-left: 1px solid ${Comment};\n    margin: 0;\n    background-color: ${Current_Line};\n    padding-right: 5px;\n    padding-left: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n`;\n\n\nexport { SearchInputInput, SearchInputForm, SearchIputButton }","import { InputHTMLAttributes, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SearchIcon } from \"../../../../../assets\";\nimport { INITHIAL_PAGE, ROUTE_FRONT } from \"../../../../../constants\";\nimport { Input, InputProps } from \"../../../../components\"\nimport { SearchInputForm, SearchInputInput, SearchIputButton } from \"./serach-input.style\"\n\n\ninterface SearchInputProps extends InputHTMLAttributes<HTMLInputElement> {\n    onChange: (val: any) => void\n};\n\nconst SearchInputSection = () => {\n\n    const [value, setValue] = useState(\"\");\n\n    const { SEARCH_QUERY } = ROUTE_FRONT;\n\n\n    const history = useHistory();\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n\n        history.push(SEARCH_QUERY(value as string, INITHIAL_PAGE))\n    }\n\n    return (\n        <SearchInputForm onSubmit={handleSubmit}>\n            <Input value={value} onChange={setValue} Style={SearchInputInput} />\n            <SearchIputButton>\n                <SearchIcon />\n            </SearchIputButton>\n        </SearchInputForm>\n    )\n}\n\nexport {\n    SearchInputSection\n}","import { useHistory } from \"react-router\";\nimport { useAppSelector } from \"../../../../../app/hooks\";\nimport { NextIcon } from \"../../../../../assets/img/next/next.icon\";\nimport { PrevIcon } from \"../../../../../assets/img/prev/prev.icon\";\nimport { INITHIAL_PAGE, ROUTE_FRONT } from \"../../../../../constants\";\nimport { useQuerySearch } from \"../../../../../hooks\"\nimport { animeSelect } from \"../../../../../reducer\";\nimport { PaginatorComponent } from \"../../../../components\";\nimport { SearchPaginatorButton, SearchPaginatorDiv, SearchPaginatorSpan } from \"./search-paginator.style\";\n\nconst SearchPaginatorSection = () => {\n\n    const { SEARCH_QUERY } = ROUTE_FRONT;\n\n    const { name, page } = useQuerySearch();\n\n    const history = useHistory();\n\n    const lastPage = useAppSelector(animeSelect)?.data?.last_page || INITHIAL_PAGE;\n\n    const pageNum = parseInt(page);\n\n    const handlePrev = () => {\n\n        const prev = pageNum === 1 ? 1 : pageNum - 1;\n\n        history.push(\n            SEARCH_QUERY(name, prev)\n        );\n    }\n\n    const handleNext = () => {\n        const next = lastPage === pageNum ? pageNum : pageNum + 1;\n\n        history.push(\n            SEARCH_QUERY(name, next)\n        )\n    }\n\n    return (\n        <PaginatorComponent handleNext={handleNext} handlePrev={handlePrev} page={pageNum} />\n    )\n}\n\nexport {\n    SearchPaginatorSection\n}","import styled from \"styled-components\";\n\nconst SearchDisplayDiv = styled.div`\n    padding-top: 30px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    gap: 20px;\n`;\n\nexport { SearchDisplayDiv }","import styled from \"styled-components\";\nimport { COLOR } from \"../../../../../../../constants\";\n\n\nconst { Cyan } = COLOR;\n\nexport const SearchDisplayCardDiv = styled.div`\n    height: 40%;\n    padding: 0 10px;\n    box-sizing: border-box;\n    width: 100%;\n    background-color: #000000ae;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    color: ${Cyan};\n`;","import { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { ROUTE_FRONT } from \"../../../../../../../constants\";\nimport { DocumentAnime } from \"../../../../../../../dto\"\nimport { SearchDisplayCardDiv } from \"./search-display-card.style\";\n\ntype SearchDisplayCardProps = {\n    anime: DocumentAnime\n}\n\nconst SearchDisplayCardSection = (props: SearchDisplayCardProps) => {\n\n    const { ANIME_QUERY } = ROUTE_FRONT;\n\n    const history = useHistory();\n\n    const { anime } = props;\n\n    const { titles: { jp, en } } = anime;\n\n    const SearchDisplayCardButton = styled.button`\n        position: relative;\n        border: 0;\n        padding: 0;\n        margin: 0;\n        width: 200px;\n        height: 300px;\n        cursor: pointer;\n        display: flex;\n        background-size: cover;\n        background-position: center;\n        background-image: url(${anime.cover_image});\n        flex-direction: column;\n        justify-content: flex-end;\n    `;\n\n    const titleToLong = (title: string) => (\n        title.substr(0, 30) + (title.length > 30 ? \"...\" : \"\")\n    )\n\n    const handleClick = () => {\n        history.push(ANIME_QUERY(anime.id))\n    }\n\n    return (\n        <SearchDisplayCardButton onClick={handleClick} key={anime.id}>\n\n            <SearchDisplayCardDiv>\n                <span>\n                    {titleToLong(en)}\n                </span>\n                <span>\n                    {titleToLong(jp)}\n                </span>\n            </SearchDisplayCardDiv>\n        </SearchDisplayCardButton>\n    )\n}\n\nexport { SearchDisplayCardSection }","import { useAppSelector } from \"../../../../../app/hooks\"\nimport { animeSelect, loading } from \"../../../../../reducer\"\nimport { LoadingConnectComponent } from \"../../../../components\";\nimport { SearchDisplayDiv } from \"./search-display.style\";\nimport { SearchDisplayCardSection } from \"./section\";\n\nconst SearchDisplaySection = () => {\n\n    const anime = useAppSelector(animeSelect);\n\n    const load = useAppSelector(loading);\n\n    if (load || anime === undefined)\n        return (\n            <LoadingConnectComponent />\n        )\n    return (\n        <SearchDisplayDiv>\n            {anime.data.documents.map(anim => (\n                <SearchDisplayCardSection anime={anim} />\n            ))}\n        </SearchDisplayDiv>\n    )\n}\n\nexport { SearchDisplaySection }","\nimport { useEffect, useState } from \"react\"\nimport { useAppDispatch } from \"../../../app/hooks\";\nimport { useQuerySearch } from \"../../../hooks\";\nimport { searchAsyncAction } from \"../../../reducer\";\nimport { SearchDisplaySection, SearchHeader, SearchInputSection, SearchPaginatorSection } from \"./section\"\n\nconst SearchScreen = () => {\n\n    const query = useQuerySearch();\n\n    const { name, page } = query;\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(searchAsyncAction(query))\n    }, [])\n\n    useEffect(() => {\n        dispatch(searchAsyncAction(query))\n    }, [name, page])\n\n    return (\n        <div>\n            <SearchHeader />\n            <SearchInputSection />\n            <SearchDisplaySection />\n            <SearchPaginatorSection />\n        </div>\n    )\n}\n\nexport { SearchScreen }","import styled from \"styled-components\";\nimport { COLOR } from \"../../../constants\";\n\nconst { Orange, Purple, Current_Line } = COLOR;\n\nconst AnimeDiv = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst AnimeBanner = styled.img`\n    width: 100%;\n`;\n\n\n\n\nexport { AnimeDiv, AnimeBanner }","import styled from \"styled-components\";\nimport { COLOR } from \"../../../../../constants\";\n\nconst { Orange, Purple, Current_Line } = COLOR;\n\nconst AnimeDiv = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst AnimeBanner = styled.img`\n    width: 100%;\n`;\n\n\nconst AnimeTitle = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 30px 0;\n`;\n\nconst AnimeTitleDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst AnimeTitleBaseSpan = styled.span`\n    font-size: 20px;\n`;\n\nconst AnimeTitleEnSpan = styled(AnimeTitleBaseSpan)`\n    color: ${Orange}\n`;\n\nconst AnimeTitleJpSpan = styled(AnimeTitleBaseSpan)`\n    color: ${Purple}\n`;\n\nconst AnimeHomeButton = styled.button`\n    background-color: ${Current_Line};\n    width: 55px;\n    height: 55px;\n    border: 0;\n    margin: 0;\n    padding: 0;\n    border-radius: 50%;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport { AnimeDiv, AnimeBanner, AnimeTitle, AnimeTitleDiv, AnimeTitleEnSpan, AnimeTitleJpSpan, AnimeHomeButton }","import { useHistory } from \"react-router\";\nimport { useAppSelector } from \"../../../../../app/hooks\";\nimport { HomeIcon } from \"../../../../../assets\"\nimport { INITHIAL_PAGE, ROUTE_FRONT } from \"../../../../../constants\";\nimport { singleAnimeSelect } from \"../../../../../reducer\";\nimport { AnimeHomeButton, AnimeTitle, AnimeTitleDiv, AnimeTitleEnSpan, AnimeTitleJpSpan } from \"./anime-title.style\"\n\nconst AnimeTitleSection = () => {\n\n    const { SEARCH_QUERY } = ROUTE_FRONT;\n\n    const singleAnime = useAppSelector(singleAnimeSelect);\n\n    const anime = singleAnime.data;\n\n    const { titles: { en, jp } } = anime;\n\n    const history = useHistory();\n\n    const handleClick = () => {\n        history.push(SEARCH_QUERY(\"\", INITHIAL_PAGE));\n    }\n\n    return (\n        <AnimeTitle>\n            <AnimeTitleDiv>\n                <AnimeTitleEnSpan>\n                    {en}\n                </AnimeTitleEnSpan>\n                <AnimeTitleJpSpan>\n                    {jp}\n                </AnimeTitleJpSpan>\n            </AnimeTitleDiv>\n            <AnimeHomeButton onClick={handleClick}>\n                <HomeIcon />\n            </AnimeHomeButton>\n        </AnimeTitle>\n    )\n\n}\n\nexport { AnimeTitleSection }","import styled from \"styled-components\";\nimport { COLOR } from \"../../../../../constants\";\n\nconst { Background, Yellow, Comment } = COLOR;\n\nconst DescriptionDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nconst DescriptionScore = styled.div`\n    background-color: ${Background};\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 0 0 50% 0;\n    padding-right: 5px;\n    padding-bottom: 5px;\n    color: ${Yellow};\n`;\n\nconst DescriptionSpan = styled.span`\n    display: flex;\n    text-align: justify;\n    width: 70%;\n    color: ${Comment}\n`;\n\n\nexport { DescriptionDiv, DescriptionSpan, DescriptionScore }","import styled from \"styled-components\";\nimport { useAppSelector } from \"../../../../../app/hooks\"\nimport { singleAnimeSelect } from \"../../../../../reducer\"\nimport { DescriptionDiv, DescriptionScore, DescriptionSpan } from \"./description.style\";\n\nconst DescriptionSection = () => {\n\n    const singleAnime = useAppSelector(singleAnimeSelect);\n\n    const { cover_image, score, descriptions } = singleAnime.data;\n\n    const DescriptionImg = styled.div`\n        background-image: url(${cover_image});\n        background-size: cover;\n        background-position: center;\n        width: 250px;\n        height: 350px;\n    `;\n\n    return (\n        <DescriptionDiv>\n            <DescriptionImg>\n                <DescriptionScore>\n                    {score}\n                </DescriptionScore>\n            </DescriptionImg>\n            <DescriptionSpan>\n                {descriptions.en}\n            </DescriptionSpan>\n        </DescriptionDiv>\n    )\n}\n\nexport { DescriptionSection }","import styled from \"styled-components\";\nimport { COLOR } from \"../../../../../constants\";\n\nconst { Current_Line, Pink, Background } = COLOR;\n\nconst EpisodeDiv = styled.div`\n    padding-top: 20px;\n`;\n\ntype EpisodeInerButtonProps = {\n    first: boolean\n}\n\nconst EpisodeInerButton = styled.button<EpisodeInerButtonProps>`\n    padding: 0;\n    margin: 0;\n    border: 1px solid ${Current_Line};\n    border-top: ${(props) => props.first ? `1px solid ${Current_Line}` : 'none'};\n    padding: 20px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    background-color: ${Background};\n    border-radius: 2px;\n`;\n\nconst EpisodeSpan = styled.span`\n    color: ${Pink};\n`;\n\nconst EpisodeA = styled.a`\n\n`;\n\nexport {\n    EpisodeDiv,\n    EpisodeInerButton,\n    EpisodeSpan,\n    EpisodeA\n}","import { FC } from \"react\";\nimport { useAppSelector } from \"../../../../../../../app/hooks\";\nimport { loadingEpSelect } from \"../../../../../../../reducer\";\nimport { LoadinComponent } from \"../../../../../../components\";\n\nconst LoadingEp: FC = () => {\n    const loading = useAppSelector(loadingEpSelect);\n    return (\n        <LoadinComponent loading={loading} />\n    );\n}\n\nexport {\n    LoadingEp\n}","import { FC } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useAppSelector } from \"../../../../../../../app/hooks\";\nimport { INITHIAL_PAGE, ROUTE_FRONT } from \"../../../../../../../constants\";\nimport { useQueryEpisode } from \"../../../../../../../hooks\"\nimport { episodeSelect } from \"../../../../../../../reducer\";\nimport { PaginatorComponent } from \"../../../../../../components\"\n\nconst EpisodePaginator: FC = () => {\n\n    const query = useQueryEpisode();\n\n    const { ANIME_QUERY } = ROUTE_FRONT;\n\n    const { id, page } = query;\n\n    const history = useHistory();\n\n    const lastPage = useAppSelector(episodeSelect)?.data?.last_page || INITHIAL_PAGE;\n\n    const handlePrev = () => {\n\n        const prev = page === 1 ? 1 : page - 1;\n\n        history.push(\n            ANIME_QUERY(id, prev)\n        );\n    }\n\n    const handleNext = () => {\n        const next = lastPage === page ? page : page + 1;\n\n        history.push(\n            ANIME_QUERY(id, next)\n        )\n    }\n\n    return (\n        <PaginatorComponent page={page} handlePrev={handlePrev} handleNext={handleNext} />\n    )\n}\n\nexport { EpisodePaginator }","import { FC, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../../../../app/hooks\";\nimport { DownloadIcon } from \"../../../../../assets\";\nimport { ROUTE_FRONT } from \"../../../../../constants\";\nimport { useQueryEpisode } from \"../../../../../hooks\";\nimport { episodeAsyncAction, episodeSelect } from \"../../../../../reducer\";\nimport { EpisodeA, EpisodeDiv, EpisodeInerButton, EpisodeSpan } from \"./episode.style\";\nimport { EpisodePaginator, LoadingEp } from \"./section\";\n\nconst EpisodesSection: FC = () => {\n\n    const dispatch = useDispatch();\n\n    const { ANIME_QUERY } = ROUTE_FRONT;\n\n    const query = useQueryEpisode();\n\n    useEffect(() => {\n        dispatch(episodeAsyncAction(query))\n    }, [query.page])\n\n    const episode = useAppSelector(episodeSelect);\n\n    return (\n        <EpisodeDiv>\n            {episode && episode.data.documents.map((ep, index) => {\n                return (\n\n                    <EpisodeInerButton first={index === 0} key={ep.id}>\n                        <EpisodeSpan>{ep.number}</EpisodeSpan>\n                        <EpisodeA target=\"_blank\" href={ep.video}>\n                            <DownloadIcon />\n                        </EpisodeA>\n                    </EpisodeInerButton>\n                )\n            })}\n            <EpisodePaginator />\n            <LoadingEp />\n        </EpisodeDiv>\n    )\n}\n\nexport { EpisodesSection }","import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks\";\nimport { useQueryId } from \"../../../hooks\"\nimport { animeAsyncAction, loading, singleAnimeSelect } from \"../../../reducer\";\nimport { LoadingConnectComponent } from \"../../components\";\nimport { AnimeBanner, AnimeDiv } from \"./anime.style\";\nimport { AnimeTitleSection, DescriptionSection, EpisodesSection } from \"./section\";\n\nconst AnimeScreen = () => {\n\n\n    const { id } = useQueryId();\n\n    const dispatch = useAppDispatch();\n\n    const load = useAppSelector(loading);\n\n    const singleAnime = useAppSelector(singleAnimeSelect);\n\n    const anime = singleAnime.data;\n\n    useEffect(() => {\n        dispatch(animeAsyncAction(parseInt(id as string)))\n    }, [])\n\n    if (load) {\n        return <LoadingConnectComponent />\n    }\n\n    return (\n        <AnimeDiv>\n            <AnimeBanner src={anime.banner_image} alt=\"banner\" />\n            <AnimeTitleSection />\n            <DescriptionSection />\n            <EpisodesSection />\n        </AnimeDiv>\n    )\n}\n\nexport { AnimeScreen }","import { useQuery } from \"../base/query.base.hook\"\n\nconst ID = \"id\";\n\ntype QueryId = {\n    id: string | null\n}\n\nconst useQueryId = (): QueryId => {\n    const query = useQuery();\n\n    const id = query.get(ID) || \"1\";\n\n    return {\n        id\n    }\n}\n\nexport { useQueryId }\n\nexport type { QueryId }","import { FC } from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { Redirect } from \"react-router-dom\";\nimport { token } from \"../../reducer\";\nimport { ROUTE_FRONT } from \"../../constants\";\n\nconst { SEARCH } = ROUTE_FRONT;\n\nconst NoTokenRoute: FC<RouteProps> = (props) => {\n\n    const tk = useAppSelector(token);\n\n    if (tk) {\n        return <Redirect to={SEARCH} />\n    }\n\n    return <Route {...props} />\n}\n\nexport { NoTokenRoute }","import { FC } from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\n\nconst PublicRoute: FC<RouteProps> = (props) => {\n    return <Route {...props} />\n}\n\nexport { PublicRoute }","import { FC } from \"react\";\nimport { Route, RouteProps } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { Redirect } from \"react-router-dom\";\nimport { token } from \"../../reducer\";\nimport { ROUTE_FRONT } from \"../../constants\";\n\nconst { LOGIN } = ROUTE_FRONT;\n\nconst TokenRoute: FC<RouteProps> = (props) => {\n\n    const tk = useAppSelector(token);\n\n    if (!tk) {\n        return <Redirect to={LOGIN} />\n    }\n\n    return <Route {...props} />\n}\n\nexport { TokenRoute }","import { FC } from \"react\";\nimport { BrowserRouter, RouteProps, Switch, Redirect } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { ROUTE_FRONT } from \"../../constants\";\nimport { token } from \"../../reducer\";\nimport { AnimeScreen, LoginScreen, SearchScreen } from \"../../ui\";\nimport { NoTokenRoute } from \"../custom/no-token.route\";\nimport { PublicRoute } from \"../custom/public.route\";\nimport { TokenRoute } from \"../custom/token.route\";\n\nconst { LOGIN, SEARCH, ANIME } = ROUTE_FRONT;\n\ntype RouteBuild = {\n    path: string,\n    exact: boolean,\n    component: FC,\n    CustomRoute: FC<RouteProps>\n}\n\nconst RouteRedirect = () => {\n    const tk = useAppSelector(token)\n\n    if (tk) {\n\n    }\n\n    return (\n        <Redirect to={LOGIN} />\n    )\n}\n\nconst RouterBuilder = () => {\n    const builder: RouteBuild[] = [\n        {\n            path: LOGIN,\n            exact: true,\n            component: LoginScreen,\n            CustomRoute: NoTokenRoute\n        },\n        {\n            path: SEARCH,\n            exact: true,\n            component: SearchScreen,\n            CustomRoute: TokenRoute\n        },\n        {\n            path: ANIME,\n            exact: true,\n            component: AnimeScreen,\n            CustomRoute: TokenRoute\n        },\n        {\n            path: \"/\",\n            exact: false,\n            component: RouteRedirect,\n            CustomRoute: PublicRoute\n        }\n    ]\n    return (\n        <BrowserRouter>\n            <Switch>\n                {\n                    builder.map(({ component, exact, path, CustomRoute }, index) => (\n                        <CustomRoute key={index} component={component} exact={exact} path={path} />\n                    )\n                    )\n                }\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport { RouterBuilder }","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { COLOR } from './constants';\nimport { RouterBuilder } from './routers';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <Counter />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <span>\n//           <span>Learn </span>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org/\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             React\n//           </a>\n//           <span>, </span>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://redux.js.org/\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Redux\n//           </a>\n//           <span>, </span>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://redux-toolkit.js.org/\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Redux Toolkit\n//           </a>\n//           ,<span> and </span>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://react-redux.js.org/\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             React Redux\n//           </a>\n//         </span>\n//       </header>\n//     </div>\n//   );\n// }\nconst { Background } = COLOR;\n\nconst DivApp = styled.div`\n    background-color: ${Background};\n    width: 100%;\n    min-height: 100vh;\n  `;\nconst Container = styled.div`\n    max-width: 1000px;\n    width: 90%;\n    margin: 0 auto;\n  `;\n\nfunction App() {\n\n\n  return (\n    <DivApp>\n      <Container>\n        <RouterBuilder />\n      </Container>\n    </DivApp>\n  );\n}\n\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { LOCAL_STORAGE } from '../constants';\nimport counterReducer from '../features/counter/counterSlice';\nimport { tokenReducer, TokenState } from '../reducer/token/token.slicer';\nimport { setLocalStorage } from '../utils';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    token: tokenReducer\n  },\n});\n\n\nstore.subscribe(() => {\n  setLocalStorage<TokenState>(store.getState().token, LOCAL_STORAGE.TOKEN);\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}